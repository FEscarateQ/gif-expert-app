{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useGetGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","placeholder","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imagenes","useGetGifs","imagen","GifExpertApp","onClick","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAACS,GAAD,OAAkBP,GAAlB,mBAAiCO,OAC/CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,YAAY,wCACZC,MAAUV,EACVW,SAlBW,SAACR,GACpBF,EAAcE,EAAES,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAACC,GACpB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAACC,GAExB,IAAOJ,EAAaI,EAAbJ,MAAMV,EAAOc,EAAPd,IAEb,OACI,sBAAKe,UAAU,yCAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKP,IACpB,kCAAKA,EAAL,WCLCQ,EAAU,SAAC,GAAmB,IAAjBpB,EAAgB,EAAhBA,UAEtB,ECFsB,SAAEA,GACxB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAENzB,EAAQC,GACPyB,MAAK,SAACC,GACHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAIlB,CAACrB,IAEGsB,EDhB6BK,CAAW3B,GAAjC0B,EAAd,EAAQnB,KAAgBc,EAAxB,EAAwBA,QAExB,OACI,qCAEI,6BAAKrB,IAEJqB,GAAW,mBAAGJ,UAAU,mCAAb,yBAGZ,qBAAKA,UAAU,YAAf,SAEQS,EAASlC,OAAS,EAClBkC,EAASjB,KAAK,SAACmB,GAAD,OACV,cAAC,EAAD,eAEQA,GADCA,EAAOjB,OAKpB,qDEQLkB,EA9BM,WACjB,MAAoC5C,mBAAS,CAAC,kBAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAIA,OACI,qCACI,cAAC,EAAD,CACIA,cAAiBA,IAErB,wBACI8C,QAAS,kBAAM9C,EAAc,KADjC,qBAKA,uBAEQS,EAAWgB,KAAI,SAACT,GACZ,OACY,cAAC,EAAD,CAEIA,UAAaA,GADRA,U,MClB7C+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8ecf05bd.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategorias} ) => {\n    const [inputValue, setInputValue] = useState('')\n    \n    const handleOnChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategorias((categorias) => [ inputValue, ...categorias, ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit= {handleOnSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"Ingrese un criterio de bÃºsqueda...\"\n                value = { inputValue }\n                onChange = { handleOnChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategorias: PropTypes.func.isRequired\n};\n","export const getGifs = async( categoria ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=10&api_key=682k4iEU8KVpwlKHWrNm8Yshq0kBtokO`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( (gif) => {\n        return {\n            id: gif.id,\n            title: gif.title,\n            url: gif.images.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = (props) => {\n    \n    const {title,url} = props;\n    \n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title}/>\n            <p> {title} </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useGetGifs } from '../hooks/useGetGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ categoria }) => {\n    \n    const { data: imagenes, loading } = useGetGifs(categoria);    \n    \n    return (\n        <> \n        \n            <h3>{categoria}</h3>\n\n            {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\n            \n            \n            <div className=\"card-grid\">\n                { \n                    imagenes.length > 0 ?\n                    imagenes.map( (imagen) => (\n                        <GifGridItem\n                            key={imagen.id}\n                            {...imagen}\n                        />\n                    ))\n                    :\n                    <p>Sin Resultados</p>\n                }\n            </div>\n        </>\n       \n    )\n}\n","import { useState, useEffect } from 'react';\n\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useGetGifs = ( categoria ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        \n        getGifs(categoria)\n        .then((imagenes) => { \n            setState({ \n                data: imagenes,\n                loading: false\n            });\n        })\n\n    }, [categoria]);\n    \n    return state;\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    const [categorias, setCategorias] = useState(['Final Fantasy']);\n\n\n\n    return (\n        <>\n            <AddCategory\n                setCategorias = {setCategorias}\n            />\n            <button\n                onClick={() => setCategorias([])}\n            >\n                Limpiar\n            </button>\n            <hr/>\n                { \n                    categorias.map((categoria) => {\n                        return (\n                                    <GifGrid\n                                        key={categoria}\n                                        categoria = {categoria}\n                                    />\n                                )\n                    })\n                }\n        </>\n    )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}